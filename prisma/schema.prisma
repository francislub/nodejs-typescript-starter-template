// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url      = env("DATABASE_URL")
}
model School {
   id        String      @id @default(cuid())
  name      String
  logo      String?
  slug String @unique
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt

  @@map("schools")
}

model Contact {
  id        String      @id @default(cuid())
  fullname      String
  email         String   @unique
  phone         String 
  school         String  @unique
  country         String 
  schoolPage         String
  students        Int 
  role        Json     
  media       Json     
  message         String
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt

  @@map("contacts")
}
model Class {
  id        String      @id @default(cuid())
  title      String
  slug         String   @unique
  students Student[]

  streams       Stream[] 
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt

  @@map("classes")
}
model Stream {
  id        String      @id @default(cuid())
  title      String
  slug         String   @unique
  classId      String 
  class       Class     @relation(fields: [classId], references: [id]) 
  students Student[]
  
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt

  @@map("streams")
}

model Parent {
  id        String      @id @default(cuid())
  title      String
  firstName  String   
  lastName   String 
  relationship  String 
  email        String? 
  NIN          String? 
  gender      String 
  dob         DateTime
  phone       String? 
  nationality  String 
  whatsapNo  String?
  imageUrl  String ? 
  contactMethod  String 
  occupation     String 
  address        String 
  password       String 
  students Student[]

  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt

  @@map("parents")
}

model Student {
  id        String      @id @default(cuid())
  name      String
  firstName  String   
  lastName   String 
  email        String 
  parentId     String 
  classId      String 
  streamId     String
  password     String 
  imageUrl     String? 
  phone        String?
  parentName   String?
  classTitle   String?
  streamTitle  String?
  state        String  
  BCN          String?  @unique 
  nationality    String 
  religion        String 
  gender         String 
  dob            DateTime?
  rollNo         String    @unique
  regNo         String     @unique
  admissionDate  DateTime
  address         String  
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt

  parent    Parent @relation(fields: [parentId], references:[id], onDelete: Cascade)
  class    Class @relation(fields: [classId], references:[id])
  stream    Stream @relation(fields: [streamId], references:[id])

  @@map("students")
}